# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rqdGvrz4Dkc94IDoxwTwKGKnFROF_uef
"""

# app.py
import streamlit as st
import pandas as pd
import numpy as np
import joblib
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import StandardScaler

# Load model and scaler
model = joblib.load("rf_model.pkl")
scaler = joblib.load("scaler.pkl")

st.title("üè† Paris Housing Price Predictor")

st.markdown("Enter the property details to get an estimated price:")

# User inputs
squareMeters = st.number_input("Square Meters", min_value=50, max_value=100000, value=100)
numberOfRooms = st.slider("Number of Rooms", 1, 100, 3)
hasYard = st.selectbox("Has Yard", [0, 1])
hasPool = st.selectbox("Has Pool", [0, 1])
floors = st.slider("Floors", 1, 100, 2)
cityCode = st.number_input("City Code", min_value=10000, max_value=99999, value=50200)
cityPartRange = st.slider("City Part Range", 1, 10, 5)
numPrevOwners = st.slider("Previous Owners", 0, 10, 2)
made = st.slider("Year Built", 1900, 2025, 2005)
isNewBuilt = st.selectbox("Is New Built", [0, 1])
hasStormProtector = st.selectbox("Has Storm Protector", [0, 1])
basement = st.number_input("Basement Size", min_value=0, max_value=10000, value=5000)
attic = st.number_input("Attic Size", min_value=0, max_value=10000, value=5000)
garage = st.number_input("Garage Size", min_value=0, max_value=1000, value=500)
hasStorageRoom = st.selectbox("Has Storage Room", [0, 1])
hasGuestRoom = st.slider("Guest Rooms", 0, 10, 1)

# Feature vector
features = np.array([[squareMeters, numberOfRooms, hasYard, hasPool, floors, cityCode,
                      cityPartRange, numPrevOwners, made, isNewBuilt, hasStormProtector,
                      basement, attic, garage, hasStorageRoom, hasGuestRoom]])

# Scale
features_scaled = scaler.transform(features)

# Predict
if st.button("Predict Price"):
    prediction = model.predict(features_scaled)[0]
    st.success(f"üè° Estimated House Price: ${prediction:,.2f}")